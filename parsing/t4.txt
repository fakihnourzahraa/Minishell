//this is for parsing ,splitting input into tokens ,handle quote
.nour maybe should work on it week 1 (token)
.nour work on it week 2 it handle single and double quote and handle < > >> |
.nour work on it week 3 to handle the pare of < > >> and Fill t_redir in t_cmd(idk what is this)
.nour work on it week 4 to parse pipelines ->produce linked list of t_cmd && handle variable expansion $VAR and $?
.nour work on it week 5 to handle edge case ->unclosed quotes,...&free memory

Implement the following redirections:
◦ < should redirect input.
◦ > should redirect output.
◦ << should be given a delimiter, then read the input until a line containing the
delimiter is seen. However, it doesn’t have to update the history!
◦ >> should redirect output in append mode.
• Implement pipes (| character). The output of each command in the pipeline is
connected to the input of the next command via a pipe.
• Handle environment variables ($ followed by a sequence of characters) which
should expand to their values.
• Handle $? which should expand to the exit status of the most recently executed
foreground pipeline.